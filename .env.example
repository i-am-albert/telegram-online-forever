# .env.example
# This is an example environment file.
#
# To use, copy this file to a new file named .env
#   cp .env.example .env  (or copy .env.example .env on Windows)
# Then, fill in your actual values in the .env file for local development.
#
# For deployment (e.g., on Railway), set these variables directly in the
# platform's environment variable settings.
#
# IMPORTANT: The .env file (containing your actual secrets)
# should NEVER be committed to your Git repository.
# Make sure .env is listed in your .gitignore file.

# --- Required Telegram API Credentials ---
# Get these from https://my.telegram.org/apps
# These are ALWAYS needed, whether using file session or string session.

# TELEGRAM_API_ID should be an integer (e.g., 1234567)
TELEGRAM_API_ID="YOUR_TELEGRAM_API_ID_HERE"

# TELEGRAM_API_HASH should be a string (e.g., "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6")
TELEGRAM_API_HASH="YOUR_TELEGRAM_API_HASH_HERE"


# --- Session Management Options ---
# Choose ONE of the following methods for session handling, especially for deployment.

# Option 1: File-based Session (Primarily for local use, or if you have persistent storage on server)
# If TELEGRAM_STRING_SESSION is NOT set, the script will use a file-based session.
#
# Name for the Telethon session file that will be created (e.g., my_bot.session)
# Default (if not set): "my_account_online_telethon"
# TELEGRAM_SESSION_NAME="my_custom_session_name"


# Option 2: String Session (Recommended for platforms like Railway, Heroku, etc.)
# If this is set, TELEGRAM_SESSION_NAME will be ignored.
# Generate this string by running a separate script (like generate_session.py) locally ONCE.
# It's a very long string.
#
# TELEGRAM_STRING_SESSION="PASTE_YOUR_GENERATED_STRING_SESSION_HERE_IF_USING_THIS_METHOD"


# --- Optional Behavior Configuration ---

# How often (in minutes) to send the "online" status update. Must be a positive integer.
# Default (if not set): 5
# TELEGRAM_UPDATE_INTERVAL_MINUTES="10"